{"version":3,"sources":["../../../src/common/database/database.module.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { DatabaseService } from './database.service';\nimport { EnvService } from '@common/env/env.service';\nimport postgres from 'postgres';\nimport { drizzle } from 'drizzle-orm/postgres-js';\nimport * as schema from './schema';\nimport { EnvModule } from '@common/env/env.module';\n\n@Module({\n  imports: [EnvModule],\n  providers: [DatabaseService, {\n    provide: 'DATABASE_CONNECTION',\n    inject: [EnvService],\n    useFactory: async (envService: EnvService) => {\n      const conn = postgres({\n        database: envService.get('DATABASE_NAME'),\n        user: envService.get('DATABASE_USER'),\n        password: envService.get('DATABASE_PASSWORD'),\n        host: envService.get('DATABASE_HOST'),\n        port: envService.get('DATABASE_PORT'),\n        ssl: true,\n      });\n\n      return drizzle(conn, { schema })\n    },\n  }],\n  exports: [DatabaseService],\n})\nexport class DatabaseModule { }\n"],"names":["DatabaseModule","imports","EnvModule","providers","DatabaseService","provide","inject","EnvService","useFactory","envService","conn","postgres","database","get","user","password","host","port","ssl","drizzle","schema","exports"],"mappings":";;;;+BA4BaA;;;eAAAA;;;wBA5BU;iCACS;4BACL;iEACN;4BACG;gEACA;2BACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBnB,IAAA,AAAMA,iBAAN,MAAMA;AAAiB;;;QAnB5BC,SAAS;YAACC,oBAAS;SAAC;QACpBC,WAAW;YAACC,gCAAe;YAAE;gBAC3BC,SAAS;gBACTC,QAAQ;oBAACC,sBAAU;iBAAC;gBACpBC,YAAY,OAAOC;oBACjB,MAAMC,OAAOC,IAAAA,iBAAQ,EAAC;wBACpBC,UAAUH,WAAWI,GAAG,CAAC;wBACzBC,MAAML,WAAWI,GAAG,CAAC;wBACrBE,UAAUN,WAAWI,GAAG,CAAC;wBACzBG,MAAMP,WAAWI,GAAG,CAAC;wBACrBI,MAAMR,WAAWI,GAAG,CAAC;wBACrBK,KAAK;oBACP;oBAEA,OAAOC,IAAAA,mBAAO,EAACT,MAAM;wBAAEU,QAAAA;oBAAO;gBAChC;YACF;SAAE;QACFC,SAAS;YAACjB,gCAAe;SAAC"}