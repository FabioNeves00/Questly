{"version":3,"sources":["../../../../src/modules/groups/entities/group.entity.ts"],"sourcesContent":["import { assignmentsGroups } from \"@assignment/entities/assignment.entity\";\nimport { questions } from \"@question/entities/question.entity\";\nimport { users } from \"@user/entities/user.entity\";\nimport { relations } from \"drizzle-orm\";\nimport { AnyPgColumn, integer, pgTable, primaryKey, serial, timestamp, varchar } from \"drizzle-orm/pg-core\";\n\nexport const groups = pgTable('groups', {\n  id: serial(\"id\").primaryKey(),\n  name: varchar('name').notNull(),\n  userId: varchar('user_id').notNull().references((): AnyPgColumn => users.id),\n  createdAt: timestamp('created_at').notNull().defaultNow(),\n  updatedAt: timestamp('updated_at').notNull().defaultNow(),\n});\n\nexport const questionGroups = pgTable('question_groups', {\n  questionId: integer('question_id').notNull().references((): AnyPgColumn => questions.id),\n  groupId: integer('group_id').notNull().references((): AnyPgColumn => groups.id),\n},\n  (t) => ({\n    pk: primaryKey({\n      columns: [t.questionId, t.groupId],\n    })\n  }));\n\nexport const groupRelations = relations(groups, ({ many, one }) => ({\n  questionGroups: many(questionGroups),\n  assignmentsGroups: many(assignmentsGroups),\n  user: one(users, {\n    fields: [groups.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const questionGroupRelations = relations(questionGroups, ({ one }) => ({\n  groups: one(groups, {\n    fields: [questionGroups.groupId],\n    references: [groups.id],\n  }),\n  questions: one(questions, {\n    fields: [questionGroups.questionId],\n    references: [questions.id],\n  })\n}));\n"],"names":["groupRelations","groups","questionGroupRelations","questionGroups","pgTable","id","serial","primaryKey","name","varchar","notNull","userId","references","users","createdAt","timestamp","defaultNow","updatedAt","questionId","integer","questions","groupId","t","pk","columns","relations","many","one","assignmentsGroups","user","fields"],"mappings":";;;;;;;;;;;IAwBaA,cAAc;eAAdA;;IAlBAC,MAAM;eAANA;;IA2BAC,sBAAsB;eAAtBA;;IAnBAC,cAAc;eAAdA;;;kCAdqB;gCACR;4BACJ;4BACI;wBAC4D;AAE/E,MAAMF,SAASG,IAAAA,eAAO,EAAC,UAAU;IACtCC,IAAIC,IAAAA,cAAM,EAAC,MAAMC,UAAU;IAC3BC,MAAMC,IAAAA,eAAO,EAAC,QAAQC,OAAO;IAC7BC,QAAQF,IAAAA,eAAO,EAAC,WAAWC,OAAO,GAAGE,UAAU,CAAC,IAAmBC,iBAAK,CAACR,EAAE;IAC3ES,WAAWC,IAAAA,iBAAS,EAAC,cAAcL,OAAO,GAAGM,UAAU;IACvDC,WAAWF,IAAAA,iBAAS,EAAC,cAAcL,OAAO,GAAGM,UAAU;AACzD;AAEO,MAAMb,iBAAiBC,IAAAA,eAAO,EAAC,mBAAmB;IACvDc,YAAYC,IAAAA,eAAO,EAAC,eAAeT,OAAO,GAAGE,UAAU,CAAC,IAAmBQ,yBAAS,CAACf,EAAE;IACvFgB,SAASF,IAAAA,eAAO,EAAC,YAAYT,OAAO,GAAGE,UAAU,CAAC,IAAmBX,OAAOI,EAAE;AAChF,GACE,CAACiB,IAAO,CAAA;QACNC,IAAIhB,IAAAA,kBAAU,EAAC;YACbiB,SAAS;gBAACF,EAAEJ,UAAU;gBAAEI,EAAED,OAAO;aAAC;QACpC;IACF,CAAA;AAEK,MAAMrB,iBAAiByB,IAAAA,qBAAS,EAACxB,QAAQ,CAAC,EAAEyB,IAAI,EAAEC,GAAG,EAAE,GAAM,CAAA;QAClExB,gBAAgBuB,KAAKvB;QACrByB,mBAAmBF,KAAKE,mCAAiB;QACzCC,MAAMF,IAAId,iBAAK,EAAE;YACfiB,QAAQ;gBAAC7B,OAAOU,MAAM;aAAC;YACvBC,YAAY;gBAACC,iBAAK,CAACR,EAAE;aAAC;QACxB;IACF,CAAA;AAEO,MAAMH,yBAAyBuB,IAAAA,qBAAS,EAACtB,gBAAgB,CAAC,EAAEwB,GAAG,EAAE,GAAM,CAAA;QAC5E1B,QAAQ0B,IAAI1B,QAAQ;YAClB6B,QAAQ;gBAAC3B,eAAekB,OAAO;aAAC;YAChCT,YAAY;gBAACX,OAAOI,EAAE;aAAC;QACzB;QACAe,WAAWO,IAAIP,yBAAS,EAAE;YACxBU,QAAQ;gBAAC3B,eAAee,UAAU;aAAC;YACnCN,YAAY;gBAACQ,yBAAS,CAACf,EAAE;aAAC;QAC5B;IACF,CAAA"}