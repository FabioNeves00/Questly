{"version":3,"sources":["../../../../src/modules/questions/entities/question.entity.ts"],"sourcesContent":["import { assignmentsQuestions } from \"@assignment/entities/assignment.entity\";\nimport { questionGroups } from \"@group/entities/group.entity\";\nimport { users } from \"@user/entities/user.entity\";\nimport { relations } from \"drizzle-orm\";\nimport { AnyPgColumn, integer, pgEnum, pgTable, serial, timestamp, varchar } from \"drizzle-orm/pg-core\";\n\nexport const questionTypes = [\"multiple_choice\", \"discursive\", \"true_or_false\"] as const;\n\nexport const questionTypesEnum = pgEnum((\"question_types\"), questionTypes);\n\nexport const questions = pgTable(\"questions\", {\n  id: serial(\"id\").primaryKey(),\n  userId: varchar(\"user_id\").notNull().references((): AnyPgColumn => users.id),\n  questionType: questionTypesEnum(\"question_type\").notNull(),\n  correctAnswerIndex: integer(\"correct_answer_index\"),\n  answers: varchar(\"answers\").array().notNull(),\n  title: varchar(\"title\").notNull(),\n  description: varchar(\"description\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const questionRelations = relations(questions, ({ one, many }) => ({\n  users: one(users, {\n    fields: [questions.userId],\n    references: [users.id],\n    relationName: \"questions_users\",\n  }),\n  questionGroups: many(questionGroups),\n  assignmentsQuestions: many(assignmentsQuestions),\n}))\n"],"names":["questionRelations","questionTypes","questionTypesEnum","questions","pgEnum","pgTable","id","serial","primaryKey","userId","varchar","notNull","references","users","questionType","correctAnswerIndex","integer","answers","array","title","description","createdAt","timestamp","defaultNow","updatedAt","relations","one","many","fields","relationName","questionGroups","assignmentsQuestions"],"mappings":";;;;;;;;;;;IAsBaA,iBAAiB;eAAjBA;;IAhBAC,aAAa;eAAbA;;IAEAC,iBAAiB;eAAjBA;;IAEAC,SAAS;eAATA;;;kCAVwB;6BACN;4BACT;4BACI;wBACwD;AAE3E,MAAMF,gBAAgB;IAAC;IAAmB;IAAc;CAAgB;AAExE,MAAMC,oBAAoBE,IAAAA,cAAM,EAAE,kBAAmBH;AAErD,MAAME,YAAYE,IAAAA,eAAO,EAAC,aAAa;IAC5CC,IAAIC,IAAAA,cAAM,EAAC,MAAMC,UAAU;IAC3BC,QAAQC,IAAAA,eAAO,EAAC,WAAWC,OAAO,GAAGC,UAAU,CAAC,IAAmBC,iBAAK,CAACP,EAAE;IAC3EQ,cAAcZ,kBAAkB,iBAAiBS,OAAO;IACxDI,oBAAoBC,IAAAA,eAAO,EAAC;IAC5BC,SAASP,IAAAA,eAAO,EAAC,WAAWQ,KAAK,GAAGP,OAAO;IAC3CQ,OAAOT,IAAAA,eAAO,EAAC,SAASC,OAAO;IAC/BS,aAAaV,IAAAA,eAAO,EAAC,eAAeC,OAAO;IAC3CU,WAAWC,IAAAA,iBAAS,EAAC,cAAcC,UAAU;IAC7CC,WAAWF,IAAAA,iBAAS,EAAC,cAAcC,UAAU;AAC/C;AAEO,MAAMvB,oBAAoByB,IAAAA,qBAAS,EAACtB,WAAW,CAAC,EAAEuB,GAAG,EAAEC,IAAI,EAAE,GAAM,CAAA;QACxEd,OAAOa,IAAIb,iBAAK,EAAE;YAChBe,QAAQ;gBAACzB,UAAUM,MAAM;aAAC;YAC1BG,YAAY;gBAACC,iBAAK,CAACP,EAAE;aAAC;YACtBuB,cAAc;QAChB;QACAC,gBAAgBH,KAAKG,2BAAc;QACnCC,sBAAsBJ,KAAKI,sCAAoB;IACjD,CAAA"}