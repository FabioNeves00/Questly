{"version":3,"sources":["../../../src/modules/auth/auth.controller.ts"],"sourcesContent":["import { Body, Controller, Get, Post, Req, Res } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignInDto } from './dto/credential-sign-in.dto';\nimport { SignUpDto } from './dto/credential-sign-up.dto';\nimport { FastifyRequestWithCookie } from '@common/types/fastify-with-cookie';\nimport { FastifyReply } from 'fastify';\nimport { DEFAULT_COOKIE_NAME } from '@common/constants';\nimport { Public } from '@common/decorators/is-public/is-public.decorator';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) { }\n\n  //sign in\n  @Public()\n  @Post('/local/sign-in')\n  async signInWithEmail(@Body() body: SignInDto, @Res({ passthrough: true }) res: FastifyReply) {\n    const { user, token } = await this.authService.signIn(body.email, body.password);\n\n    res.setCookie(DEFAULT_COOKIE_NAME, token, { httpOnly: true, secure: true, signed: true, domain: 'localhost', path: '/' });\n\n    return res.send(user);\n  }\n\n  @Public()\n  @Post('/local/sign-up')\n  async signUpWithEmail(@Body() body: SignUpDto, @Res({ passthrough: true }) res: FastifyReply) {\n    const { user, token } = await this.authService.signUp(body);\n\n    res.setCookie(DEFAULT_COOKIE_NAME, token, { httpOnly: true, secure: true, signed: true, domain: 'localhost', path: '/' });\n\n    return res.send(user);\n  }\n\n  // @Post('/local/sign-out')\n  // async signOut() {\n  //   return this.authService.signOut();\n  // }\n  //\n  @Get('/local/session')\n  async getSession(@Req() req: FastifyRequestWithCookie) {\n    return await this.authService.getUserFromTokenInRequest(req);\n  }\n}\n"],"names":["AuthController","signInWithEmail","body","res","user","token","authService","signIn","email","password","setCookie","DEFAULT_COOKIE_NAME","httpOnly","secure","signed","domain","path","send","signUpWithEmail","signUp","getSession","req","getUserFromTokenInRequest","constructor","passthrough"],"mappings":";;;;+BAYaA;;;eAAAA;;;wBAZyC;6BAC1B;qCACF;qCACA;mCACe;yBACZ;2BACO;mCACb;yBACC;;;;;;;;;;;;;;;AAIjB,IAAA,AAAMA,iBAAN,MAAMA;IAGX,SAAS;IACT,MAEMC,gBAAgB,AAAQC,IAAe,EAAE,AAA4BC,GAAiB,EAAE;QAC5F,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAM,IAAI,CAACC,WAAW,CAACC,MAAM,CAACL,KAAKM,KAAK,EAAEN,KAAKO,QAAQ;QAE/EN,IAAIO,SAAS,CAACC,8BAAmB,EAAEN,OAAO;YAAEO,UAAU;YAAMC,QAAQ;YAAMC,QAAQ;YAAMC,QAAQ;YAAaC,MAAM;QAAI;QAEvH,OAAOb,IAAIc,IAAI,CAACb;IAClB;IAEA,MAEMc,gBAAgB,AAAQhB,IAAe,EAAE,AAA4BC,GAAiB,EAAE;QAC5F,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAM,IAAI,CAACC,WAAW,CAACa,MAAM,CAACjB;QAEtDC,IAAIO,SAAS,CAACC,8BAAmB,EAAEN,OAAO;YAAEO,UAAU;YAAMC,QAAQ;YAAMC,QAAQ;YAAMC,QAAQ;YAAaC,MAAM;QAAI;QAEvH,OAAOb,IAAIc,IAAI,CAACb;IAClB;IAEA,2BAA2B;IAC3B,oBAAoB;IACpB,uCAAuC;IACvC,IAAI;IACJ,EAAE;IACF,MACMgB,WAAW,AAAOC,GAA6B,EAAE;QACrD,OAAO,MAAM,IAAI,CAACf,WAAW,CAACgB,yBAAyB,CAACD;IAC1D;IA/BAE,YAAY,AAAiBjB,WAAwB,CAAE;aAA1BA,cAAAA;IAA4B;AAgC3D;;;;;;QA3BwDkB,aAAa;;;;;;;;;;;;;;QAUbA,aAAa"}