{"version":3,"sources":["../../../../src/modules/assignments/entities/assignment.entity.ts"],"sourcesContent":["import { groups } from \"@group/entities/group.entity\";\nimport { questions } from \"@question/entities/question.entity\";\nimport { users } from \"@user/entities/user.entity\";\nimport { relations } from \"drizzle-orm\";\nimport { AnyPgColumn, integer, pgTable, primaryKey, serial, timestamp, varchar } from \"drizzle-orm/pg-core\";\n\nexport const assignments = pgTable('assignments', {\n  id: serial('id').primaryKey(),\n  userId: varchar('user_id').notNull().references((): AnyPgColumn => users.id),\n  name: varchar('name').notNull(),\n  description: varchar('description'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n\nexport const assignmentsQuestions = pgTable('assignments_questions', {\n  assignmentId: integer('assignment_id').notNull().references((): AnyPgColumn => assignments.id),\n  questionId: integer('question_id').notNull().references((): AnyPgColumn => questions.id),\n},\n  (t) => ({\n    pk: primaryKey({\n      columns: [t.assignmentId, t.questionId],\n    })\n  }));\n\nexport const assignmentsGroups = pgTable('assignments_groups', {\n  assignmentId: integer('assignment_id').notNull().references((): AnyPgColumn => assignments.id),\n  groupId: integer('group_id').notNull().references((): AnyPgColumn => groups.id),\n},\n  (t) => ({\n    pk: primaryKey({\n      columns: [t.assignmentId, t.groupId],\n    })\n  }));\n\nexport const assignmentsRelations = relations(assignments, ({ many, one }) => ({\n  questions: many(assignmentsQuestions, {\n    relationName: \"assignments_questions\",\n  }),\n  groups: many(assignmentsGroups, {\n    relationName: \"assignments_groups\",\n  }),\n  users: one(users, {\n    fields: [assignments.userId],\n    references: [users.id],\n    relationName: \"assignments_users\",\n  })\n}));\n\nexport const assignmentGroupRelations = relations(assignmentsGroups, ({ one }) => ({\n  groups: one(groups, {\n    fields: [assignmentsGroups.groupId],\n    references: [groups.id],\n  }),\n  assignments: one(assignments, {\n    fields: [assignmentsGroups.assignmentId],\n    references: [assignments.id],\n  }),\n}));\n\nexport const assignmentQuestionRelations = relations(assignmentsQuestions, ({ one }) => ({\n  questions: one(questions, {\n    fields: [assignmentsQuestions.questionId],\n    references: [questions.id],\n  }),\n  assignments: one(assignments, {\n    fields: [assignmentsQuestions.assignmentId],\n    references: [assignments.id],\n  }),\n}));\n"],"names":["assignmentGroupRelations","assignmentQuestionRelations","assignments","assignmentsGroups","assignmentsQuestions","assignmentsRelations","pgTable","id","serial","primaryKey","userId","varchar","notNull","references","users","name","description","createdAt","timestamp","defaultNow","updatedAt","assignmentId","integer","questionId","questions","t","pk","columns","groupId","groups","relations","many","one","relationName","fields"],"mappings":"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"}